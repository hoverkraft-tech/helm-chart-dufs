# Default values for dufs.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- dufs config file that will be used
#    check the auth section if you want to add some authentication
#    and allow uploads/deletes/patchs
"dufs.yaml": |
  # please adjust settings to your needs
  serve-path: '/dufs/data'
  auth: []
  allow-all: false
  allow-upload: true
  allow-delete: true
  allow-search: true
  allow-symlink: true
  allow-archive: true
  enable-cors: true
  render-index: true
  render-try-index: true
  render-spa: true
  log-format: '$remote_addr "$request" $status $http_user_agent'
  log-file: /dev/stdout
  compress: low

# --  url of a zip file containing assets for custom Ui
#     see https://github.com/sigoden/dufs/tree/main/assets for reference
assetsZipUrl: ""

replicaCount: 1

image:
  repository: sigoden/dufs
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 5000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  # this is the main volume that dufs will serve
  # you might want to override it
  - name: data
    emptyDir: {}

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  # if you changed volume name above don't forget to change it here too
  - name: data
    mountPath: "/dufs/data"
    readOnly: false

nodeSelector: {}

tolerations: []

affinity: {}
